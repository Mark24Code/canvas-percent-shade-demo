{"version":3,"sources":["assets/background.jpg","assets/frontend.jpg","utils.js","fastCanvas.js","drawConfig.js","demo.jsx","App.js","index.js"],"names":["transToHttps","url","test","split","sourcePath","FastCanvas","config","init","canvasConfig","id","width","height","c","window","document","getElementById","createElement","ctx","getContext","Error","canvas","ratio","getPixelRatio","style","scale","context","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","devicePixelRatio","startDraw","a","debug","drawList","drawTasks","i","length","currentTask","type","args","methodName","camelCase","console","log","JSON","stringify","save","restore","drawImage","x","y","Promise","resolve","reject","img","Image","imgUrl","originImgUrlQuery","noCacheQuery","qs","time","Date","valueOf","crossOrigin","src","onload","onerror","err","drawShadeMaskImage","percent","strokeStyle","beginPath","moveTo","bezierCurveTo","lineTo","stroke","clip","insertRoot","rootId","append","downloadImg","toBlob","blobObj","imgSrc","URL","createObjectURL","aLink","download","href","click","render","children","preset","this","createDrawConfig","require","default","CanvasDemo","props","renderCanvas","state","fastCanvas","updatePercent","textInput","current","value","setState","React","createRef","step","min","max","ref","defaultValue","onClick","Component","App","className","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.ac47e4de.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.d67466eb.jpg\";","export default __webpack_public_path__ + \"static/media/frontend.c9daf1f4.jpg\";","export const transToHttps = (url) => {\n  const httpPattern = /^http:\\/\\/(.*)$/;\n  if (httpPattern.test(url)) {\n    const [protocol, sourcePath] = url.split('://')\n\n    return `https://${sourcePath}`\n  }\n\n  return url\n}","import { camelCase } from 'lodash';\nimport qs from 'query-string';\nimport { transToHttps } from './utils';\n\n\nexport default class FastCanvas {\n  constructor(config) {\n    const { debug, rootId, id, width, height, children, preset } = config;\n\n    this.canvasConfig = {\n      rootId: rootId || 'root',\n      id: id || `${rootId}-canvas`,\n      width,\n      height,\n      debug: debug || false,\n    }\n    this.drawList = children || [];\n    this.ctx = null;\n    this.preset = preset;\n    this.init()\n  }\n\n  init = () => {\n    const {\n      id,\n      width,\n      height,\n    } = this.canvasConfig;\n    let c = window.document.getElementById(id);\n    if(!c) {\n      c = window.document.createElement('canvas');\n      c.id = id;\n    }\n\n    const ctx = c.getContext('2d'); // 创建context对象\n    if (!ctx) {\n      throw Error('Cannot find canvas.getContext');\n    }\n\n    // global\n    this.c = c;\n    this.canvas = c;\n    this.ctx = ctx;\n    this.ratio = this.getPixelRatio();\n\n    // setting\n    c.style.width = width + 'px';\n    c.style.height = height + 'px';\n\n    c.width = width * this.ratio;\n    c.height = height * this.ratio;\n\n    ctx.scale(this.ratio, this.ratio);\n  }\n\n  getPixelRatio = () => {\n    const context = this.ctx;\n    const backingStore = context.backingStorePixelRatio ||\n      context.webkitBackingStorePixelRatio ||\n      context.mozBackingStorePixelRatio ||\n      context.msBackingStorePixelRatio ||\n      context.oBackingStorePixelRatio ||\n      context.backingStorePixelRatio || 1;\n    return (window.devicePixelRatio || 1) / backingStore;\n  }\n\n  startDraw = async () => {\n    const ctx = this.ctx;\n    const { debug } = this.canvasConfig;\n    if (this.drawList <= 0) { return };\n\n    const drawTasks = [...this.drawList];\n\n    for (let i = 0; i < drawTasks.length; i++) {\n      const currentTask = drawTasks[i];\n      const { id, type, ...args } = currentTask;\n      const methodName = camelCase(`draw_${type}`);\n\n      if (debug) {\n        console.log(`[start draw] ${id || JSON.stringify(currentTask)}`)\n      }\n      ctx.save();\n      await this[methodName](args);\n      ctx.restore();\n      if (debug) {\n        console.log(`[finished draw] ${id || JSON.stringify(currentTask)}`)\n      }\n    }\n  }\n\n  drawImage = async ({ url, x, y, width, height }) => {\n    const ctx = this.ctx;\n    return new Promise((resolve, reject) => {\n      const img = new window.Image();\n      url = transToHttps(url);\n      // 可能会修改origin，为了加载同一张图片时候不产生跨域报错，增加时间戳不使用缓存\n      const [imgUrl, originImgUrlQuery] = url.split('?');\n      const noCacheQuery = qs.stringify({ time: new Date().valueOf() })\n\n      url = imgUrl + '?' + noCacheQuery + originImgUrlQuery;\n      const { debug } = this.canvasConfig;\n      if (debug) {\n        console.log('[drawImageUrl]:' + url)\n      }\n      // iOS13 BUG crossOrigin必须先于 src 设置 https://blog.csdn.net/DavidFFFFFF/article/details/95217076\n      img.crossOrigin = 'anonymous';\n      img.src = url;\n      img.onload = function () {\n        ctx.drawImage(img, x, y, width, height);\n        resolve();\n      }\n      img.onerror = function (err) {\n        reject(err);\n      }\n    })\n  }\n\n \n  drawShadeMaskImage = async ({ url, x, y, width, height, percent }) => {\n    // 因为画布计算式反着的坐标系\n    percent = 1 - percent;\n    // 不规则百分比遮罩\n    const ctx = this.ctx;\n    ctx.save();\n    ctx.strokeStyle = 'rgba(255,255,255,0)'; // 隐藏贝塞尔边缘线\n    ctx.beginPath();\n    ctx.moveTo(0, height * percent);\n    ctx.bezierCurveTo(width * 0.25, height * percent * 1.5, width * 0.75, height * percent * 0.5, width, height*percent );\n    ctx.lineTo(width, height);\n    ctx.lineTo(0, height);\n    ctx.lineTo(0, height * percent);\n    ctx.stroke();\n    ctx.clip();\n    await this.drawImage({ url, x, y, width, height });\n  }\n\n  insertRoot = () => {\n    const { rootId } = this.canvasConfig;\n    const root = window.document.getElementById(rootId)\n    root.append(this.c);\n  }\n\n  downloadImg = async () => {\n    const { id } = this.canvasConfig;\n    const canvas = this.c;\n    const imgSrc = await new Promise((resolve, reject) => {\n      canvas.toBlob(function (blobObj) {\n        const imgSrc = window.URL.createObjectURL(blobObj)\n        resolve(imgSrc)\n      })\n    })\n\n    const aLink = window.document.createElement('a');\n    aLink.download = `${id}.png`;\n    aLink.href = imgSrc;\n    aLink.click();\n  }\n\n  render = async () => {\n    try {\n      await this.startDraw();\n      await this.insertRoot();\n    } catch (err) {\n      if (this.canvasConfig.debug) {\n        console.log(err)\n      }\n    }\n  }\n}","const createDrawConfig = ({ percent }) => {\n\n  return {\n    rootId: 'poster',\n    id: 'poster-canvas',\n    width: 349,\n    height: 233,\n    debug: false,\n    children: [\n      {\n        id: '背景图',\n        type: 'image',\n        url: require('./assets/background.jpg').default,\n        x: 0,\n        y: 0,\n        width: 349,\n        height: 233,\n      },\n      {\n        id: '前景图',\n        type: 'shadeMaskImage',\n        url: require('./assets/frontend.jpg').default,\n        x: 0,\n        y: 0,\n        width: 349,\n        height: 233,\n        percent,\n      },\n    ]\n  }\n}\n\nexport default createDrawConfig;","import React, { Component } from 'react';\nimport FastCanvas from './fastCanvas';\nimport createDrawConfig from './drawConfig';\n\n\nexport default class CanvasDemo extends Component {\n  constructor(props) {\n    super(props);\n    this.textInput = React.createRef();\n    this.state = {\n      percent: 50\n    }\n\n\n  }\n\n  componentDidMount() {\n    console.log('update')\n    this.renderCanvas();\n  }\n\n  renderCanvas = async () => {\n    const config = createDrawConfig({\n      percent: this.state.percent / 100\n    })\n\n    this.fastCanvas = new FastCanvas(config);\n    await this.fastCanvas.render();\n  }\n\n  updatePercent = () => {\n    console.log(this.textInput.current.value)\n    this.setState({\n      percent: this.textInput.current.value\n    },() => {\n      this.renderCanvas();\n    })\n  }\n\n  render() {\n    const { percent } = this.state;\n    return (\n      <>\n        <input type=\"number\" step=\"1\" min=\"0\" max=\"100\" ref={this.textInput} defaultValue={percent} />\n        <button onClick={this.updatePercent}>update percent</button>\n        <div>display percent: {percent}%</div>\n        <div id='poster' />\n      </>\n\n    )\n  }\n}\n","import Demo from './demo'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Demo />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}